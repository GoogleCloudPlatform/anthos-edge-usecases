# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################
# This is a GCP CloudBuild Trigger config file. The trigger
# is for a PullRequest event pointing to the main branch
###########################################################

steps:
###########################################################
# npm install to ensure ui dependencies have no errors
###########################################################
- id: 'npm-install'
  name: 'node:16.14.0'
  dir: 'point-of-sale-app/ui'
  entrypoint: 'npm'
  args: [ 'install' ]
  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

  ###########################################################
  # create namespace yaml for the PR
  ###########################################################
- id: 'create-namespace.yaml'
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
    cat <<EOF > /workspace/namespace.yaml -
    apiVersion: v1
    kind: Namespace
    metadata:
      name: pr-$_PR_NUMBER
    EOF
  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

  ###########################################################
  # apply the namespace.yaml to the dev cluster
  ###########################################################
- id: 'create-k8s-namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  dir: '.github/cloudbuild'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=$_DEV_CLUSTER_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_DEV_CLUSTER'
  args: [
      'apply',
      '-f',
      '/workspace/namespace.yaml'
  ]
  # indicates that the step need not wait for any other step
  waitFor: [ 'create-namespace.yaml' ]

  ###########################################################
  # create the skaffold deploy script
  ###########################################################
- id: 'create-skaffold-exec-script'
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
    cat <<EOF > /workspace/deploy.sh -
    #!/bin/bash

    gcloud container clusters get-credentials --zone $_DEV_CLUSTER_ZONE $_DEV_CLUSTER

    ./mvnw install
    skaffold run -p dev -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --namespace=pr-$_PR_NUMBER --tag=pr-$_PR_NUMBER

    EOF
  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

  ###########################################################
  # skaffold deploy to kubernetes cluster
  ###########################################################
- id: 'deploy-to-k8s'
  name: 'gcr.io/k8s-skaffold/skaffold:v1.36.0'
  dir: 'point-of-sale-app'
  args: [
      'bash',
      '/workspace/deploy.sh',
  ]
  # waitFor: commented out, so this step waits for all previous steps

  ###########################################################
  # create the script to fetch the Loadbalancer IP
  ###########################################################
- id: 'create-get-external-ip-script'
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
    cat <<EOF > /workspace/fetch-ip.sh -
    #!/bin/bash

    gcloud container clusters get-credentials --zone $_DEV_CLUSTER_ZONE $_DEV_CLUSTER
    kubectl -n pr-$_PR_NUMBER get service/$_LB_SERVICE -o jsonpath='{.status.loadBalancer.ingress[0].ip}' > /workspace/pr-$_PR_NUMBER.$_LB_SERVICE.ip
    EOF
  waitFor: [ 'deploy-to-k8s' ]

  ###########################################################
  # fetch the External IP for the API-Server
  ###########################################################
- id: 'get-external-loadbalancer-ip'
  name: 'gcr.io/k8s-skaffold/skaffold:v1.36.0'
  args: [
      'bash',
      '/workspace/fetch-ip.sh',
  ]
  waitFor: [ 'create-get-external-ip-script' ]

  ###########################################################
  # Comment the fetched IP in the GitHub Pull request
  # https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master/github
  ###########################################################
- id: 'comment-ip-to-github-pr'
  name: 'us-docker.pkg.dev/point-of-sale-ci/third-party-images/github-cli:mar-22'
  secretEnv: [ 'GITHUB_TOKEN' ]
  args: [
      'pr', 'comment', '$_PR_NUMBER',
      '--repo', '$_HEAD_REPO_URL',
      '--body', 'Access the Point-of-Sale at: "$(cat /workspace/pr-$_PR_NUMBER.$_LB_SERVICE.ip)"',
  ]
  # indicates that the step need not wait for any other step
  waitFor: [ 'get-external-loadbalancer-ip' ]

availableSecrets:
  inline:
  - kmsKeyName: 'projects/$PROJECT_ID/locations/global/keyRings/$_GHTOKEN_KEYRING_NAME/cryptoKeys/$_GHTOKEN_KEY_NAME'
    envMap:
      GITHUB_TOKEN: 'CiQAuVI6Z93rj1B1R4yer3G1VzEmW7aHtjATP2jOtyJjkW5qOR8SUQBHWet7zXRDJQTBSvFZuXXsOBIxtvf0VDM610Tjgb5XJY8hbIuBxhsMfDy3+/p2ojVnYmE+Mg9NDg5FGZhlJlB/+PBMCumkbMovTXD582u17A=='
timeout: 900s
logsBucket: 'gs://pos-cloudbuild-logs'
options:
  logging: GCS_ONLY