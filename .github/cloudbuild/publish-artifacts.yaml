# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################
# This is a GCP CloudBuild Trigger config file. The trigger
# can be used to publish the built artifacts to
# repostiories (container-image and maven)
###########################################################

steps:
  ###########################################################
  # publish jars to artifact registry
  ###########################################################
- id: 'publish-jars'
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  entrypoint: bash
  args:
  - -c
  - |
    echo "Deploying the maven jars..."
    ./mvnw clean deploy
  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

- id: 'get-release-version'
  name: 'python'
  entrypoint: bash
  args:
  - -c
  - |
    pip install -r .github/releases/requirements.txt
    if [ $_HEAD_BRANCH == 'release-minor' ] || [ $_HEAD_BRANCH == 'restructure3' ]; then
      VERSION=$(python3 .github/releases/releaser.py -t minor -p true)

    elif [ $_HEAD_BRANCH == 'release-patch' ]; then
      VERSION=$(python3 .github/releases/releaser.py -t patch -p true)

    elif [ $_HEAD_BRANCH == 'release-major' ]; then
      VERSION=$(python3 .github/releases/releaser.py -t major -p true)

    else
      echo "Nothing to do since it's not a 'release' PR"
      exit 0
    fi

    echo "Version is [$$VERSION]"
    cat <<EOF > /workspace/version.txt -
    $$VERSION
    EOF

  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

 ###########################################################
  # skaffold deploy to kubernetes cluster
  ###########################################################
- id: 'publish-images'
  name: 'gcr.io/k8s-skaffold/skaffold:v1.36.0'
  entrypoint: bash
  args:
  - -c
  - |
    VERSION=$(cat /workspace/version.txt)
    echo "Publishing images with tag v$$VERSION..."
    ./mvnw clean install
    skaffold build -p dev -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --tag=v$$VERSION
  waitFor: [ 'get-release-version' ]

timeout: 1800s
logsBucket: 'gs://pos-cloudbuild-logs'
options:
    logging: GCS_ONLY