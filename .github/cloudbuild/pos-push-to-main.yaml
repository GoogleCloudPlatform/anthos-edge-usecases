# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################
# This is a GCP CloudBuild Trigger config file. The trigger
# is for a Push event to the main branch
###########################################################

steps:
  ###########################################################
  # create namespace yaml for the PR
  ###########################################################
- id: 'create-deploy-script'
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
    cat <<EOF > /workspace/namespace.yaml -
    # namespace to deploy the mysql db based deployment
    apiVersion: v1
    kind: Namespace
    metadata:
      name: $_STAGING_NS-db
    ---
    # namespace to deploy the inmemory h2 db based deployment
    apiVersion: v1
    kind: Namespace
    metadata:
      name: $_STAGING_NS-inmemory
    EOF

    cat <<EOF > /workspace/deploy.sh -
    #!/bin/bash

    gcloud container clusters get-credentials --zone $_MAIN_CLUSTER_ZONE $_MAIN_CLUSTER
    kubectl apply -f /workspace/namespace.yaml

    ./src/mvnw install
    skaffold run -p dev -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --namespace=$_STAGING_NS-db --tag=$COMMIT_SHA-db
    skaffold run -p dev,inmemory -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --namespace=$_STAGING_NS-db --tag=$COMMIT_SHA-inmemory
    EOF
  # indicates that the step need not wait for any other step
  waitFor: [ '-' ]

  ###########################################################
  # skaffold deploy to kubernetes cluster
  ###########################################################
- id: 'deploy-to-k8s'
  name: 'gcr.io/k8s-skaffold/skaffold:v1.36.0'
  args: [
      'bash',
      '/workspace/deploy.sh'
  ]
  # waitFor: commented out, so this step waits for all previous steps

timeout: 1800s
logsBucket: 'gs://pos-cloudbuild-logs'
options:
  logging: GCS_ONLY