# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################
# This is a GCP CloudBuild Trigger config file. The trigger
# is for a Push event to the main branch
###########################################################

steps:
  ###########################################################
  # Deploy the latest from main the staging namespace
  ###########################################################
- id: 'deploy-to-k8s-staging'
  name: 'gcr.io/k8s-skaffold/skaffold:v2.1.0'
  entrypoint: bash
  args:
  - -c
  - |
    gcloud container clusters get-credentials --zone $_MAIN_CLUSTER_ZONE $_MAIN_CLUSTER
    kubectl create namespace $_STAGING_NS-db
    kubectl create namespace $_STAGING_NS-inmemory

    ./mvnw install
    skaffold run -p dev -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --namespace=$_STAGING_NS-db --tag=$COMMIT_SHA-db
    skaffold run -p dev,inmemory -f=skaffold.yaml --default-repo=us-docker.pkg.dev/$PROJECT_ID/$_POS_IMAGE_REPO --namespace=$_STAGING_NS-inmemory --tag=$COMMIT_SHA-inmemory
  # waitFor: commented out, so this step waits for all previous steps

  ###########################################################
  # Get the namespaces for the most recent PRs
  ###########################################################
- id: 'get-namespaces'
  name: 'us-docker.pkg.dev/point-of-sale-ci/third-party-images/github-cli:mar-22'
  secretEnv: [ 'GITHUB_TOKEN' ]
  entrypoint: bash
  args:
  - -c
  - |
    gh pr list --state closed --limit 10 --json number --jq '.[].number' > /workspace/pr.numbers
    xargs -n 1 -I '{}' echo pr-{}-db < /workspace/pr.numbers > /workspace/k8.namespaces
    xargs -n 1 -I '{}' echo pr-{}-inmemory < /workspace/pr.numbers >> /workspace/k8.namespaces
  # waitFor: commented out, so this step waits for all previous steps

  ###########################################################
  # cleanup old namespaces and resources
  ###########################################################
- id: 'delete-namespace-for-closed-prs'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: bash
  args:
  - -c
  - |
      gcloud container clusters get-credentials --zone $_DEV_CLUSTER_ZONE $_DEV_CLUSTER
      xargs -n 1 -I '{}' kubectl delete namespace {} < /workspace/k8.namespaces || true

availableSecrets:
  inline:
  - kmsKeyName: 'projects/$PROJECT_ID/locations/global/keyRings/$_GHTOKEN_KEYRING_NAME/cryptoKeys/$_GHTOKEN_KEY_NAME'
    envMap:
      GITHUB_TOKEN: 'CiQAuVI6Z/c868Z4fvpyy/hzIZcn/L9G9CEu3ZHqLJfoCBkJFdASUQBHWet7Ce948YvMSQdEaB96OIbJXR/xixXGMrrF/enjBjDfCSgRsH9SAyTVWJwsWH7S2stzlonhEGVWWh3Uiplswt27KofuL6P6cQ+f1CJRdw=='

timeout: 1800s
logsBucket: 'gs://pos-cloudbuild-logs'
options:
  logging: GCS_ONLY